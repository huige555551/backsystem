package operation.service.topics;

import java.util.ArrayList;
import java.util.List;

import operation.exception.XueWenServiceException;
import operation.pojo.file.FileStoreInfo;
import operation.pojo.topics.Post;
import operation.pojo.topics.PostResponse;
import operation.pojo.topics.SubPost;
import operation.pojo.user.User;
import operation.repo.topics.PostRepository;
import operation.repo.topics.SubPostRepository;
import operation.service.drycargo.DrycargoService;
import operation.service.file.MyFileService;
import operation.service.praise.PraiseService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import tools.Config;
import tools.StringUtil;

@Service
@Component
public class PostService {
	@Autowired
	public PostRepository postRepository;
	@Autowired
	public MyFileService myFileService;
	@Autowired
	public SubPostRepository subPostRepository;
	@Autowired
	public PraiseService  praiseService;
	
	@Autowired
	public TopicService  topicService;
	
	@Autowired
	public DrycargoService  drycargoService;
	
	public PostService(){
		
	}
	
	/**
	 * 分页获取主题回复
	 * @param topicId
	 * @param pageable
	 * @return
	 * @throws XueWenServiceException
	 */
	public Page<Post> getTopicPost(String topicId,Pageable pageable)throws XueWenServiceException{
		if(StringUtil.isBlank(topicId)){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		if(topicService.findOneById(topicId)==null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		return postRepository.findByTopicId(topicId, pageable);
	}
	
	
	/**
	 * 获取主题回复
	 * @param topicId
	 * @param pageable
	 * @return
	 * @throws XueWenServiceException
	 */
	public List<Post> getAllTopicPost(String topicId)throws XueWenServiceException{
		if(StringUtil.isBlank(topicId)){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		if(topicService.findOneById(topicId)==null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		return postRepository.findByTopicId(topicId);
	}
	
	/**
	 * 获取副楼回复
	 * @param postId
	 * @param pageable
	 * @return
	 * @throws XueWenServiceException
	 */
	public List<SubPost> getAllSubPost(String postId)throws XueWenServiceException{
		if(StringUtil.isBlank(postId)){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		List<SubPost> subPost=subPostRepository.findByParentId(postId);
		return subPost;
	}
	
	
	/**
	 * 分页获取副楼回复
	 * @param postId
	 * @param pageable
	 * @return
	 * @throws XueWenServiceException
	 */
	public Page<SubPost> getSubPost(String postId,Pageable pageable)throws XueWenServiceException{
		if(StringUtil.isBlank(postId)){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		Page<SubPost> subPost=subPostRepository.findByParentId(postId, pageable);
		return subPost;
	}
	
	/**
	 * 获取主楼中存储的副楼回复
	 * @param postId
	 * @return
	 * @throws XueWenServiceException
	 */
	public List<SubPost> getSubPostInPost(String postId)throws XueWenServiceException{
		return findOneById(postId).getSubPosts();
	}
	
	/**
	 * 主楼回复
	 * @param user
	 * @param post
	 * @param fileUrl
	 * @return
	 * @throws XueWenServiceException
	 */
	public Post replyTopic(User user,Post post)throws XueWenServiceException{
//		private String post_id;  //帖子PID
//		private String topicId; // 归属主题ID
//		private String appKey;//
//		private String sourceId; // 来源编号 群组id
//		private String sourceName; // 来源名称		
//		
//		private int layer;//所在楼层		
		if(post == null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		if(topicService.findOneById(post.getTopicId())==null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		post.setAuthorId(user.getId());
		post.setAuthorName(user.getNickName());
		post.setAuthorLogoUrl(user.getLogoURL());
		long time=System.currentTimeMillis();
		post.setCtime(time);
		post.setUtime(time);
//		private String message;//内容
		if(StringUtil.isBlank(post.getFileUrl())){
			post.setType("0");
		}else{
			//如URL不为空，则为图片或者是语音
			if(myFileService.isImg(post.getFileUrl())){
				post.setType("2");
			}else{
				post.setType("1");
			}
		}
		post.setSubPostsSize(0);
		post.setDisplayOrder(0);
		post.setLikesCount(0);
		double[] position=new double[]{post.getLat(),post.getLng()};
		post.setPosition(position);
		//计算主楼回复次数
		topicService.saveReplyCount(post.getTopicId());
		return postRepository.save(post);
	}
	
//	/**
//	 * 主楼回复
//	 * @param user
//	 * @param post
//	 * @param file
//	 * @return
//	 * @throws XueWenServiceException
//	 */
//	public Post replyTopic(User user,Post post)throws XueWenServiceException{
//		if(post == null){
//			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
//		}
//		if(topicService.findOneById(post.getTopicId())==null){
//			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
//		}
////		String fileUrl=uploadPostFile(file);
//		return replyTopic(user,post,fileUrl);
//	}
	
	
	/**
	 * 副楼回复
	 * @param user
	 * @param post
	 * @param fileUrl
	 * @return
	 * @throws XueWenServiceException
	 */
	public SubPost replyPost(User user,SubPost subPost)throws XueWenServiceException{
//		private String post_id;  //帖子PID
//		private String topicId; // 归属主题ID
//		private String appKey;//
//		private String sourceId; // 来源编号 群组id
//		private String sourceName; // 来源名称		
		
//		private int layer;//所在楼层
		if(subPost == null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		Post post=postRepository.findOneByPostId(subPost.getParentId());
		if(post == null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		subPost.setAuthorId(user.getId());
		subPost.setAuthorName(user.getNickName());
		subPost.setAuthorLogoUrl(user.getLogoURL());
		long time= System.currentTimeMillis();
		subPost.setCtime(time);
		subPost.setUtime(time);
		if(StringUtil.isBlank(subPost.getFileUrl())){
			subPost.setType("0");
		}else{
			//如URL不为空，则为图片或者是语音
			if(myFileService.isImg(subPost.getFileUrl())){
				subPost.setType("2");
			}else{
				subPost.setType("1");
			}
		}
		subPost.setDeleted(false);
		double[] position=new double[]{subPost.getLat(),subPost.getLng()};
		subPost.setPosition(position);
//		private String parentId; //父帖id
//	    private String parentPostAuthorId;//父类帖子发帖人id
//	    private String parentPostAuthorName;//父类帖子发帖人名字
		if(post.getSubPostsSize()<3){
			post.setSubPostsSize(post.getSubPostsSize()+1);
			List<SubPost> listSubPost = new ArrayList<SubPost> ();
			if(post.getSubPosts()==null){
				listSubPost.add(subPost);
				post.setSubPosts(listSubPost);
			}else{
				post.getSubPosts().add(subPost);
			}
			post.setUtime(time);
			postRepository.save(post);
			return subPost;
		}else{
			post.setSubPostsSize(post.getSubPostsSize()+1);
			postRepository.save(post);
			return subPostRepository.save(subPost);
		}

	}
	
//	/**
//	 * 副楼回复
//	 * @param user
//	 * @param post
//	 * @param file
//	 * @return
//	 * @throws XueWenServiceException
//	 */
//	public SubPost replyPost(User user,SubPost subPost,MultipartFile file)throws XueWenServiceException{
//		if(subPost == null){
//			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
//		}
//		if(findOneById(subPost.getParentId()) == null){
//			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
//		}
//		String fileUrl=uploadPostFile(file);
//		return replyPost(user,subPost,fileUrl);
//	}
	
	/**
	 * 上传回复文件，并回复主题文件的网络访问地址
	 * @param file
	 * @return
	 * @throws XueWenServiceException
	 */
	public String uploadPostFile( MultipartFile file)throws XueWenServiceException{
		if (null != file && !file.isEmpty()) {
			String suffile=String.valueOf(System.currentTimeMillis());  //文件基础路径后缀（划分多文件目录，防止一个目录下有多个目录）
			String fileLocal=getPostPicLocal(suffile);
			String fileUrl=getPostPicUrl(suffile);
			FileStoreInfo fif=myFileService.uploadFile(file, fileLocal,fileUrl);
			if(fif !=null){
				return fif.getFileUrl();
			}
		}
		return null;
	}
	
	
	/**
	 * 得到回复文件服务器存储地址
	 * @return
	 * @throws XueWenServiceException
	 */
	private  String getPostPicLocal(String suffix)throws XueWenServiceException{
		String str=myFileService.idSpilt(suffix, 5);
		return Config.POSTFILELOCAL+str;
	}
	
	/**
	 * 得到回复文件的网络访问URL
	 * @return
	 * @throws XueWenServiceException
	 */
	private  String getPostPicUrl(String suffix)throws XueWenServiceException{
		String str=myFileService.idSpilt(suffix, 5);
		return Config.POSTFILEURL+str;
	}
	
	/**
	 * 主楼详情
	 * @param postId
	 * @return
	 * @throws XueWenServiceException
	 */
	public Post getPostDetails(String postId)throws XueWenServiceException{
		if(StringUtil.isBlank(postId)){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		Post post=postRepository.findOne(postId);
		if(post == null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		//查找前10条副楼回复
		Pageable pageable = new PageRequest(0,10,new Sort(Direction.DESC,"ctime"));
		Page<SubPost> subPosts=getSubPost(postId,pageable);
		post.getSubPosts().addAll(subPosts.getContent());
		return post;
		
	}
	
	/**
	 * 主楼回复点赞
	 * @param user
	 * @param postId
	 * @return
	 * @throws XueWenServiceException
	 */
	public Post addPraise(User user,String postId)throws XueWenServiceException{
		if(StringUtil.isBlank(postId)){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		Post post=findOneById(postId);
		if(post == null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		praiseService.addPraise(user,Config.YXTDOMAIN,post.getAppKey(), postId,"2");
		post.setLikesCount(post.getLikesCount()+1);
		return postRepository.save(post);
	}
	
	/**
	 * 主楼回复点赞
	 * @param user
	 * @param postId
	 * @return
	 * @throws XueWenServiceException
	 */
	public Post addPraisePc(User user,String postId)throws XueWenServiceException{
		if(StringUtil.isBlank(postId)){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		Post post=findOneById(postId);
		if(post == null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		praiseService.addPraiseTip(Config.YXTDOMAIN, Config.APPKEY_PC, postId, Config.TYPE_TOPIC_POST_GROUP, user.getId());
		post.setLikesCount(post.getLikesCount()+1);
		return postRepository.save(post);
	}
	
	/**
	 * 根据ID返回主楼信息
	 * @param id
	 * @return
	 * @throws XueWenServiceException
	 */
	public Post findOneById(String id)throws XueWenServiceException{
		if(StringUtil.isBlank(id)){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		return postRepository.findOneByPostId(id);
	}
	
	/**
	 * 根据用户Id和主楼Id判断用户是否赞过此主楼
	 * @param userId
	 * @param postId
	 * @return
	 * @throws XueWenServiceException
	 */
	public boolean isLikePost(String  userId,String appKey,String postId)throws XueWenServiceException{
		return praiseService.isUserPraise(userId, Config.YXTDOMAIN,postId,"2");
	}
	
	/**
	 * 根据用户ID返回Post 的Response对象
	 * @param userId
	 * @param post
	 * @return
	 * @throws XueWenServiceException
	 */
	public PostResponse toPostResponse(String userId,Post post)throws XueWenServiceException{
		PostResponse prs=new PostResponse(post);
		prs.setLike(isLikePost(userId,post.getAppKey(),post.getPostId()));
		return prs;
	}
	
	/**
	 * 根据用户Id和post集合 得到Post的Response的集合
	 * @param userId
	 * @param posts
	 * @return
	 * @throws XueWenServiceException
	 */
	public List<PostResponse> toPostResponseList(String userId,List<Post> posts)throws XueWenServiceException{
		List<PostResponse> prss=new ArrayList<PostResponse>();
		if(posts != null ){
			for(Post post:posts){
				prss.add(toPostResponse(userId,post));
			}
		}
		return prss;
	}
	
	/**
	 * 干货主楼回复
	 * @param user
	 * @param post
	 * @param fileUrl
	 * @return
	 * @throws XueWenServiceException
	 */
	public Post replyDrycargo(User user,Post post,String groupId)throws XueWenServiceException{
		if(post == null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		if(drycargoService.findOneById(post.getTopicId())==null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		post.setAuthorId(user.getId());
		post.setAuthorName(user.getNickName());
		post.setAuthorLogoUrl(user.getLogoURL());
		long time=System.currentTimeMillis();
		post.setCtime(time);
		post.setUtime(time);
//		private String message;//内容
		if(StringUtil.isBlank(post.getFileUrl())){
			post.setType("0");
		}else{
			//如URL不为空，则为图片或者是语音
			if(myFileService.isImg(post.getFileUrl())){
				post.setType("2");
			}else{
				post.setType("1");
			}
		}
		post.setSubPostsSize(0);
		post.setDisplayOrder(0);
		post.setLikesCount(0);
		double[] position=new double[]{post.getLat(),post.getLng()};
		post.setPosition(position);
		//计算主楼回复次数
		drycargoService.saveReplyCount(post.getTopicId(),groupId);
		return postRepository.save(post);
	}
	
	/**
	 * 分页获取干货主题回复
	 * @param topicId
	 * @param pageable
	 * @return
	 * @throws XueWenServiceException
	 */
	public Page<Post> getDrycargoPost(String topicId,String groupId,Pageable pageable)throws XueWenServiceException{
		if(StringUtil.isBlank(topicId)){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		if(drycargoService.findOneById(topicId)==null){
			throw new XueWenServiceException(Config.STATUS_201, Config.MSG_201,null);
		}
		return postRepository.findByTopicId(topicId, pageable);
	}
	
	/**
	 * 
	 * @Title: findByTopidsIn
	 * @Description: 通过ids取post
	 * @param ids
	 * @return List<Post>
	 * @throws
	 */
	public List<Post>findByTopidsIn(List<String> ids){
		return postRepository.findByTopicIdIn(ids);
	}
	
}
