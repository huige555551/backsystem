package operation.service.ossRecomend;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONObject;
import operation.exception.XueWenServiceException;
import operation.pojo.box.BoxPost;
import operation.pojo.course.NewCourse;
import operation.pojo.course.NewGroupCourse;
import operation.pojo.drycargo.Drycargo;
import operation.pojo.group.XueWenGroup;
import operation.pojo.topics.Topic;
import operation.service.box.BoxPostService;
import operation.service.box.BoxService;
import operation.service.course.NewCourseService;
import operation.service.course.NewGroupCourseService;
import operation.service.drycargo.DrycargoService;
import operation.service.group.GroupService;
import operation.service.topics.TopicService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import tools.Config;
import tools.YXTJSONHelper;

/**
 * 
 * @ClassName: 
 * @Description: 运维数据
 * @author tangli
 * @date 2015年3月3日 上午8:40:20
 *
 */
@Service
public class OssRecomendService {
	@Autowired
	private BoxPostService boxPostService;
	@Autowired
	private BoxService boxService;
	@Autowired
	private DrycargoService drycargoService;
	@Autowired
	private GroupService groupService;
	@Autowired
	private TopicService topicService;
	@Autowired
	private NewGroupCourseService newGroupCourseService;
	@Autowired
	private NewCourseService newCourseService;

	/**
	 * 
	 * @Title: findIndexDry
	 * @auther tangli
	 * @Description: 取干货内容
	 * @param name
	 * @return
	 * @throws XueWenServiceException
	 *             List<Drycargo>
	 * @throws
	 */
	public List<JSONObject> findDry(String name)
			throws XueWenServiceException {
		List<Object> ids = getSourceIdByBoxPostName(name);
		List<Drycargo> drycargos = drycargoService.findByIdIn(ids);
		List<JSONObject> res = new ArrayList<JSONObject>();
		for (Drycargo drycargo : drycargos) {
			JSONObject object = YXTJSONHelper.includeAttrJsonObject(drycargo,
					new String[] { "id", "url", "fileUrl", "message",
							"description" });
			res.add(object);
		}
		return res;
	}

	/**
	 * 
	 * @Title: findGroups
	 * @auther Tangli
	 * @Description: 取群组内容
	 * @param name
	 * @return
	 * @throws XueWenServiceException
	 *             List<JSONObject>
	 * @throws
	 */
	public List<JSONObject> findGroups(String name)
			throws XueWenServiceException {
		List<Object> ids = getSourceIdByBoxPostName(name);
		List<XueWenGroup> groups = groupService.findByIdIn(ids);
		List<JSONObject> res = new ArrayList<JSONObject>();
		for (XueWenGroup xueWenGroup : groups) {
			JSONObject object = YXTJSONHelper.includeAttrJsonObject(
					xueWenGroup, new String[] { "id", "groupName", "intro",
							"logoUrl", "memberCount" });
			res.add(object);
		}
		return res;
	}

	/**
	 * 
	 * @Title: findIndexTopics
	 * @auther Tangli
	 * @Description: 取话题内容
	 * @param name
	 * @return
	 * @throws XueWenServiceException
	 *             List<JSONObject>
	 * @throws
	 */
	public List<JSONObject> findTopics(String name)
			throws XueWenServiceException {
		List<Object> ids = getSourceIdByBoxPostName(name);
		List<Topic> topics = topicService.findByIdIn(ids);
		return topicService.shoutlistforpc(topics);
	}

	/**
	 * 
	 * @Title: findCourse
	 * @auther Tangli
	 * @Description: 取课程内容
	 * @param name
	 * @return
	 * @throws XueWenServiceException
	 *             List<JSONObject>
	 * @throws
	 */
	public List<JSONObject> findCourse(String name)
			throws XueWenServiceException {
		List<Object> ids = getSourceIdByBoxPostName(name);
		List<NewGroupCourse> courses = newGroupCourseService.findByIdIn(ids);
		List<JSONObject> res = new ArrayList<JSONObject>();
		for (NewGroupCourse newGroupCourse : courses) {
			XueWenGroup group = groupService.findById((String) newGroupCourse
					.getGroup());
			NewCourse course = newCourseService.findOne((String) newGroupCourse
					.getCourse());
			Map<String, Object> map = new HashMap<String, Object>();
			if (course != null) {
				map.put("courseTitle", course.getTitle());
				map.put("courseId", course.getId());
				map.put("praiseCount", course.getPraiseCount());
				map.put("courseIntro", course.getIntro());
				map.put("logoUrl", course.getLogoUrl());
			} else {
				map.put("courseTitle", "");
				map.put("courseId", "");
				map.put("praiseCount", "");
				map.put("courseIntro", "");
				map.put("logoUrl","");
			}
			if (group != null) {
				map.put("groupId", group.getId());
				map.put("groupName", group.getGroupName());
			} else {
				map.put("groupId", "");
				map.put("groupName", "");
			}
			res.add(YXTJSONHelper.getInObjectAttrJsonObject(newGroupCourse,
					map, "id"));
		}

		return res;
	}

	/**
	 * 
	 * @Title: getSourceIdByBoxPostName
	 * @auther Tangli
	 * @Description:通过首页位置名称获取相关内容的id集合
	 * @param name
	 * @return
	 * @throws XueWenServiceException
	 *             List<Object>
	 * @throws
	 */
	private List<Object> getSourceIdByBoxPostName(String name)
			throws XueWenServiceException {

		BoxPost boxPost = boxPostService.findByName(name);
		if (boxPost == null) {
			throw new XueWenServiceException(Config.STATUS_201, "位置不存在", null);
		}
		List<Object> ids = boxService.getSourceIdsByBoxPostId(boxPost.getId());
		return ids;
	}
}
