package operation.controller.course;

import javax.servlet.http.HttpServletRequest;

import operation.BaseController;
import operation.exception.XueWenServiceException;
import operation.pojo.course.UserBuyCourse;
import operation.pojo.pub.QueryModel;
import operation.pojo.user.User;
import operation.service.course.UserBuyCourseService;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import tools.Config;
import tools.PageRequestTools;
import tools.ReponseDataTools;
import tools.ResponseContainer;

@RestController
@RequestMapping("/userbuycourse")
@Configuration
public class UserBuyCourseController extends BaseController{
	
	private static final Logger logger=Logger.getLogger(UserBuyCourseController.class);
	@Autowired
	public UserBuyCourseService userBuyCourseService;
	
	/**
	 * 我购买的课程
	 * @param request
	 * @param dm
	 * @return
	 */
	@RequestMapping("findMyBuyCourse")
	public @ResponseBody ResponseContainer findMyBuyCourse(HttpServletRequest request,QueryModel dm) {
		
		try {
			String token = request.getParameter("token");
			User currentUser = this.getCurrentUser(token);
			Pageable pageable = PageRequestTools.pageRequesMake(dm);
			Page<UserBuyCourse> userBuyCourse = userBuyCourseService.userBuyCourse(currentUser.getId(), pageable);
			ReponseDataTools.getClientReponseData(getReponseData(), userBuyCourse);
			return addPageResponse(Config.STATUS_200, Config.MSG_200, getReponseData(),Config.RESP_MODE_10, "");
		} catch (XueWenServiceException e) {
			e.printStackTrace();
			return addResponse(e.getCode(), e.getMessage(), false,Config.RESP_MODE_10, "");
		} catch (Exception e) {
			e.printStackTrace();
			return addResponse(Config.STATUS_505, Config.MSG_505, false,Config.RESP_MODE_10, "");
		}
	}
	

}
