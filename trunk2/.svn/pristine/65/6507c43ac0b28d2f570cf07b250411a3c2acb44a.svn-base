package operation.service.activity;

import operation.exception.XueWenServiceException;
import operation.pojo.activity.Activity;
import operation.repo.activity.ActivityRepo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import tools.Config;
import tools.StringUtil;

/**
 * 
* @ClassName: ActivityService
* @Description:线下活动
* @author tangli
* @date 2015年3月23日 下午2:21:58
*
 */
@Service
public class ActivityService {
  @Autowired
  private ActivityRepo activityRepo;
  /**
   * 
   * @Title: save
   * @auther tangli
   * @Description: 保存 更新
   * @param activity void
   * @throws
   */
  public void save(Activity activity,String desImgsStr,String optionsStr){
	  if(!StringUtil.isBlank(desImgsStr)){
		  activity.setDesImgs(desImgsStr.split(","));
	  }
	  if(!StringUtil.isBlank(optionsStr)){
		  activity.setOptions(optionsStr.split(","));
	  }
	  activityRepo.save(activity);
  }
  
  /**
   * 
   * @Title: findOne
   * @auther tangli
   * @Description: 根据id取
   * @param Id
   * @return Activity
   * @throws
   */
  public Activity findOne(String id) throws XueWenServiceException{
	  if(StringUtil.isBlank(id)){
		  throw new XueWenServiceException(Config.STATUS_201, "参数不能为空",null);
	  }
	  return activityRepo.findOne(id);
  }
  /**
   * 
   * @Title: findByCity
   * @auther tangli
   * @Description: 通过城市查询
   * @param city
   * @param pageable
   * @return
   * @throws XueWenServiceException Page<Activity>
   * @throws
   */
  public Page<Activity>findByCity(String city,Pageable pageable) throws XueWenServiceException{
	  if(StringUtil.isBlank(city)){
		  throw new XueWenServiceException(Config.STATUS_201, "参数不能为空",null);
	  }
	  return activityRepo.findByCity(city,pageable);
	  
  }
  
  public Page<Activity> activityPage(Pageable pageable){
	  return activityRepo.findAll(pageable);
  }
  /**
   * 
   * @Title: searchActivity
   * @auther tangli
   * @Description: 搜索活动
   * @param ctime  开始时间
   * @param etime  结束时间
   * @param city   活动城市
   * @param pageable
   * @return Page<Activity>
   * @throws
   */
	public Page<Activity> searchActivity(Long ctime, Long etime, String city,
			Pageable pageable) {
		if (ctime == null || etime == null) {
			ctime = 0l;
			etime = System.currentTimeMillis();
		}
		if (StringUtil.isBlank(city)) {
			return activityRepo.findByActivityStartTimeBetween(ctime, etime,
					pageable);
		} else {
			return activityRepo.findByActivityStartTimeBetweenAndCity(ctime,
					etime, city, pageable);
		}
	}
}
