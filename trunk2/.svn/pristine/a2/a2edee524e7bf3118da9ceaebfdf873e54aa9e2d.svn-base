package operation.controller.order;

import javax.servlet.http.HttpServletRequest;

import operation.BaseController;
import operation.exception.XueWenServiceException;
import operation.pojo.user.User;

import org.apache.log4j.Logger;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import tools.Config;

@RestController
@RequestMapping("/order")
@Configuration
public class OrderController extends BaseController{
	
	private static final Logger logger=Logger.getLogger(OrderController.class);
	
	public OrderController(){
		super();
	}
	
	/**
	 * 生成订单
	 * @param request
	 * @param dm
	 * @return
	 */
	@RequestMapping("create")
	public @ResponseBody Object advancePay(HttpServletRequest request) {
		try {
			String token = request.getParameter("token");
			User currentUser = this.getCurrentUser(token);
			String courseId = request.getParameter("courseId"); //商品编号
			String price = request.getParameter("price");//购买价格
			Object obj = this.payCreate(currentUser.getId(), currentUser.getNickName(), currentUser.getLogoURL(), courseId,price);
			//return addResponse(Config.STATUS_200, Config.MSG_CREATE_200,obj, Config.RESP_MODE_10, "");
			return obj;
		} catch (XueWenServiceException e) {
			return addResponse(e.getCode(), e.getMessage(), false,Config.RESP_MODE_10, "");
		} catch (Exception e) {
			return addResponse(Config.STATUS_505, Config.MSG_505, false,Config.RESP_MODE_10, "");
		}
	}
	/**
	 * 调用支付系统进行订单生成
	 * @param userId
	 * @param nickName
	 * @param logoUrl
	 * @param courseId
	 * @param price
	 * @return
	 */
	private Object payCreate(String userId, String nickName, String logoUrl,String courseId, String price) {
		String url = Config.YXTSERVER3 + "order/create?userId=" + userId+"&nickName="+nickName+"&logoUrl="+logoUrl+"&courseId="+courseId+"&price="+price;
		return getRestApiData(url);
	}
	
	/**
	 * 我的订单
	 * @param request
	 * @return
	 */
	@RequestMapping("myOrder")
	public @ResponseBody Object myOrder(HttpServletRequest request) {
		try {
			String token = request.getParameter("token");
			User currentUser = this.getCurrentUser(token);
			
			String n = request.getParameter("n");
			if (n == null) {
				n = "0";
			}
			// 每页条数
			String s = request.getParameter("s");

			if (s == null) {
				s = "10";
			}
			Object obj = this.payMyOrder(currentUser.getId(),n,s);
			//return addResponse(Config.STATUS_200, Config.MSG_CREATE_200,obj, Config.RESP_MODE_10, "");
			return obj;
		} catch (XueWenServiceException e) {
			return addResponse(e.getCode(), e.getMessage(), false,Config.RESP_MODE_10, "");
		} catch (Exception e) {
			return addResponse(Config.STATUS_505, Config.MSG_505, false,Config.RESP_MODE_10, "");
		}
	}
	/**
	 * 调用支付订单系统查询我的订单
	 * @param userId
	 * @param n
	 * @param s
	 * @return
	 */
	private Object payMyOrder(String userId,String n,String s) {
		String url = Config.YXTSERVER3 + "order/myOrder?userId=" + userId+"&n="+n+"&s="+s;
		return getRestApiData(url);
	}
	
	/**
	 * 订单详情
	 * @param request
	 * @return
	 */
	@RequestMapping("orderDetail")
	public @ResponseBody Object orderDetail(HttpServletRequest request) {
		try {
			String token = request.getParameter("token");
			User currentUser = this.getCurrentUser(token);
			String orderId = request.getParameter("orderId"); //商品编号
			Object obj = this.payOrderDetail(orderId);
			return addResponse(Config.STATUS_200, Config.MSG_CREATE_200,obj, Config.RESP_MODE_10, "");
			//return obj;
		} catch (XueWenServiceException e) {
			return addResponse(e.getCode(), e.getMessage(), false,Config.RESP_MODE_10, "");
		} catch (Exception e) {
			return addResponse(Config.STATUS_505, Config.MSG_505, false,Config.RESP_MODE_10, "");
		}
	}
	
	/**
	 * 调用支付订单系统订单详情
	 * @param userId
	 * @param n
	 * @param s
	 * @return
	 */
	private Object payOrderDetail(String orderId) {
		String url = Config.YXTSERVER3 + "order/orderDetail?orderId=" + orderId;
		return getRestApiData(url);
	}
	
	/**
	 * 修改订单
	 * @param request
	 * @return
	 */
	@RequestMapping("updateOrder")
	public @ResponseBody Object updateOrder(HttpServletRequest request) {
		try {
			String token = request.getParameter("token");
			User currentUser = this.getCurrentUser(token);
			String orderId = request.getParameter("orderId"); //订单编号
			String payType = request.getParameter("payType"); //支付类型
			Object obj = this.payUpdateOrder(orderId,payType,currentUser);
			//增加用户购买记录
			return addResponse(Config.STATUS_200, Config.MSG_CREATE_200,obj, Config.RESP_MODE_10, "");
			//return obj;
		} catch (XueWenServiceException e) {
			return addResponse(e.getCode(), e.getMessage(), false,Config.RESP_MODE_10, "");
		} catch (Exception e) {
			return addResponse(Config.STATUS_505, Config.MSG_505, false,Config.RESP_MODE_10, "");
		}
	}
	
	/**
	 * 调用支付用户中心修改订单状态
	 * @param orderId
	 * @param payType
	 * @return
	 */
	private Object payUpdateOrder(String orderId,String payType,User user) {
		String url = Config.YXTSERVER3 + "order/updateOrderStatus?orderId=" + orderId+"&payType="+payType+"&userId="+user.getId()+"&nickName="+user.getNickName()+"&logoUrl="+user.getLogoURL();
		return getRestApiData(url);
	}
	
	

}
