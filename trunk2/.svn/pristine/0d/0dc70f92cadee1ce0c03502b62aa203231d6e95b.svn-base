package operation.controller.my;

import javax.servlet.http.HttpServletRequest;

import operation.BaseController;
import operation.exception.XueWenServiceException;
import operation.pojo.course.NewCourse;
import operation.pojo.drycargo.Drycargo;
import operation.pojo.pub.QueryModel;
import operation.pojo.topics.Topic;
import operation.pojo.user.User;
import operation.service.drycargo.DrycargoService;
import operation.service.my.MyService;
import operation.service.topics.TopicService;

import org.jsoup.helper.StringUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import tools.Config;
import tools.PageRequestTools;
import tools.ReponseDataTools;
import tools.ResponseContainer;

@RestController
@RequestMapping("/my")
@Configuration
public class MyController extends BaseController {
	@Autowired
	private MyService myService;
	@Autowired
	private TopicService topicService;
	@Autowired
	private DrycargoService drycargoService;

	/**
	 * 获得我创建的话题
	 * @param request
	 * @param dm
	 * @return
	 */
	@RequestMapping("findMyTopic")
	public @ResponseBody ResponseContainer findMyTopic(HttpServletRequest request, QueryModel dm) {
		try {
			String token = request.getParameter("token");	
			User currentUser = this.getCurrentUser(token);
			Pageable pageable = PageRequestTools.pageRequesMake(dm);
			Page<Topic> topicResult = myService.myCreatedTopic(currentUser.getId(), pageable);
			ReponseDataTools.getClientReponseData(getReponseData(), topicResult);
			this.getReponseData().setResult(topicService.toJSONHelper(topicResult.getContent(),currentUser));
			return addPageResponse(Config.STATUS_200, Config.MSG_200, getReponseData(),Config.RESP_MODE_10, "");
			} 
			catch (Exception e) {
				e.printStackTrace();
				return addResponse(Config.STATUS_505, Config.MSG_505, false,Config.RESP_MODE_10, "");
			}
	}
	/**
	 * 获得我创建的干货
	 * @param request
	 * @param dm
	 * @return
	 */
	@RequestMapping("findMyDrycargo")
	public @ResponseBody ResponseContainer userDrycargo(HttpServletRequest request,QueryModel dm) {
		Pageable pageable = PageRequestTools.pageRequesMake(dm);
		Page<Drycargo> dryCargoResult;
		try {
			String token = request.getParameter("token");
			User currentUser = this.getCurrentUser(token);
			String dryFlag = request.getParameter("dryFlag");//0干货1炫页
			if(StringUtil.isBlank(dryFlag)){
				dryFlag = "0";
			}
			dryCargoResult = myService.myCreatedDrycargo(currentUser.getId(),Integer.parseInt(dryFlag), pageable);
			ReponseDataTools.getClientReponseData(getReponseData(), dryCargoResult);
			this.getReponseData().setResult((drycargoService.toResponeses(dryCargoResult.getContent(),currentUser.getId())));
			return addPageResponse(Config.STATUS_200, Config.MSG_200, getReponseData(),Config.RESP_MODE_10, "");
		} catch (XueWenServiceException e) {
			e.printStackTrace();
			return addResponse(e.getCode(), e.getMessage(), false,Config.RESP_MODE_10, "");
		} catch (Exception e) {
			e.printStackTrace();
			return addResponse(Config.STATUS_505, Config.MSG_505, false,Config.RESP_MODE_10, "");
		}
	}
	
	/**
	 * 获得我创建的课程
	 * @param request
	 * @param dm
	 * @return
	 */
	@RequestMapping("findMyCourse")
	public @ResponseBody ResponseContainer findMyCourse(HttpServletRequest request,QueryModel dm) {
		Pageable pageable = PageRequestTools.pageRequesMake(dm);
		Page<NewCourse> newCourse;
		try {
			String token = request.getParameter("token");
			User currentUser = this.getCurrentUser(token);
			newCourse = myService.myCreatedCourse(currentUser.getId(), pageable);
			ReponseDataTools.getClientReponseData(getReponseData(), newCourse);
			this.getReponseData().setResult((myService.formateCourseList(newCourse.getContent())));
			return addPageResponse(Config.STATUS_200, Config.MSG_200, getReponseData(),Config.RESP_MODE_10, "");
		} catch (XueWenServiceException e) {
			e.printStackTrace();
			return addResponse(e.getCode(), e.getMessage(), false,Config.RESP_MODE_10, "");
		} catch (Exception e) {
			e.printStackTrace();
			return addResponse(Config.STATUS_505, Config.MSG_505, false,Config.RESP_MODE_10, "");
		}
	}
	
	
}
